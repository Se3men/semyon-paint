{"version":3,"sources":["store/toolState.js","components/SettingBar.jsx","tools/Tool.js","tools/Brush.js","tools/Rect.js","tools/Circle.js","tools/Eraser.js","tools/Line.js","store/canvasState.js","components/Toolbar.jsx","components/Canvas.jsx","App.js","index.js"],"names":["tool","makeAutoObservable","this","color","fillColor","strokeColor","width","lineWidth","SettingBar","className","htmlFor","onChange","event","toolState","setLineWidth","target","value","style","margin","id","type","defaultValue","min","max","setStrokeColor","Tool","canvas","socket","ctx","getContext","destroyEvents","fillStyle","strokeStyle","onmouseup","onmousedown","onmousemove","Brush","listen","mouseUpHandler","bind","mouseDownHandler","mouseMoveHandler","mouseDown","send","JSON","stringify","method","figure","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","x","y","lineTo","stroke","Rect","startX","startY","height","saved","toDataURL","currentX","currentY","draw","w","h","img","Image","src","onload","clearRect","drawImage","rect","fill","Circle","radius","Math","sqrt","a","arc","PI","Eraser","Line","name","sessionid","undoList","redoList","username","data","push","length","dataUrl","pop","Toolbar","onClick","setTool","canvasState","setFillColor","changeColor","marginLeft","undo","redo","console","log","document","createElement","href","download","body","appendChild","click","removeChild","Canvas","observer","canvasRef","useRef","usernameRef","useState","modal","setModal","params","useParams","useEffect","setCanvas","current","axios","get","then","response","WebSocket","setSocket","setSessionId","onopen","onmessage","msg","parse","drawHandler","staticDraw","staticCircleDraw","eraserDraw","lineDraw","Modal","show","onHide","Header","Title","Body","ref","Footer","Button","variant","setUsername","onMouseDown","pushToUndo","post","App","path","to","Date","toString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d7bf4c8.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\n\nclass ToolState {\n  tool = null\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  setTool(tool) {\n    this.tool = tool;\n  }\n\n  setFillColor(color) {\n    this.tool.fillColor = color;\n  }\n\n  setStrokeColor(color) {\n    this.tool.strokeColor = color;\n  }\n\n  setLineWidth(width) {\n    this.tool.lineWidth = width;\n  }\n}\n\nexport default new ToolState();\n","import React from 'react';\nimport '../styles/toolbar.scss'\nimport toolState from '../store/toolState'\n\nconst SettingBar = () => {\n  return (\n    <div className='setting-bar'>\n      <label htmlFor=\"line-width\">Толщина линии</label>\n      <input\n        onChange={event => toolState.setLineWidth(event.target.value)}\n        style={{margin: '0 10px'}}\n        id=\"line-width\"\n        type=\"number\"\n        defaultValue={1} min={1} max={50}/>\n\n      <label htmlFor='stroke-color'>Цвет обводки</label>\n      <input\n        onChange={event => toolState.setStrokeColor(event.target.value)}\n        id=\"stroke-color\"\n        type=\"color\"\n      />\n    </div>\n  );\n};\n\nexport default SettingBar;\n","export default class Tool {\n  constructor(canvas, socket, id) {\n    this.canvas = canvas;\n    this.socket = socket;\n    this.id = id;\n    this.ctx = canvas.getContext('2d');\n    this.destroyEvents();\n  };\n\n  set fillColor(color) {\n    this.ctx.fillStyle = color;\n  }\n\n  set strokeColor(color) {\n    this.ctx.strokeStyle = color;\n  }\n\n  set lineWidth(width) {\n    this.ctx.lineWidth = width\n  }\n\n  destroyEvents() {\n    this.canvas.onmouseup = null;\n    this.canvas.onmousedown = null;\n    this.canvas.onmousemove = null;\n  }\n};\n","import Tool from \"./Tool\";\n\nexport default class Brush extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  };\n\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseUpHandler(event) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'finish',\n      }\n    }))\n  }\n\n  mouseDownHandler(event) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(event.pageX - event.target.offsetLeft, event.pageY - event.target.offsetTop)\n  }\n\n  mouseMoveHandler(event) {\n    if(this.mouseDown) {\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'brush',\n          x: event.pageX - event.target.offsetLeft,\n          y: event.pageY - event.target.offsetTop,\n        }\n      }))\n    }\n  }\n\n  static draw(ctx, x, y) {\n    ctx.lineTo(x, y)\n    ctx.stroke()\n  }\n};\n","import Tool from \"./Tool\";\n\nexport default class Rect extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  };\n\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseUpHandler(event) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'rect',\n        x: this.startX,\n        y: this.startY,\n        width: this.width,\n        height: this.height,\n        color: this.ctx.fillStyle,\n      }\n    }))\n  }\n\n  mouseDownHandler(event) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.startX = event.pageX - event.target.offsetLeft;\n    this.startY = event.pageY - event.target.offsetTop;\n    this.saved = this.canvas.toDataURL();\n  }\n\n  mouseMoveHandler(event) {\n    if(this.mouseDown) {\n      let currentX = event.pageX - event.target.offsetLeft;\n      let currentY = event.pageY - event.target.offsetTop;\n      this.width = currentX - this.startX;\n      this.height = currentY - this.startY;\n      this.draw(this.startX, this.startY, this.width, this.height)\n    }\n  }\n\n  draw(x, y, w, h) {\n    const img = new Image()\n    img.src = this.saved\n    img.onload = () => {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.beginPath()\n        this.ctx.rect(x, y, w, h)\n        this.ctx.fill()\n        this.ctx.stroke()\n    }\n  }\n\n  static staticDraw(ctx, x, y, w, h, color) {\n    ctx.fillStyle = color\n    ctx.beginPath()\n    ctx.rect(x, y, w, h);\n    ctx.fill();\n    ctx.stroke();\n  }\n};\n","import Tool from \"./Tool\";\n\nexport default class Circle extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  };\n\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseUpHandler(event) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'circle',\n        x: this.startX,\n        y: this.startY,\n        radius: this.radius,\n        color: this.ctx.fillStyle,\n      }\n    }))\n  }\n\n  mouseDownHandler(event) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.startX = event.pageX - event.target.offsetLeft;\n    this.startY = event.pageY - event.target.offsetTop;\n    this.saved = this.canvas.toDataURL();\n  }\n\n  mouseMoveHandler(event) {\n    if(this.mouseDown) {\n      let currentX = event.pageX - event.target.offsetLeft;\n      let currentY = event.pageY - event.target.offsetTop;\n      this.width = currentX - this.startX;\n      this.height = currentY - this.startY;\n      this.radius = Math.sqrt(this.width**2 + this.height**2)\n      this.draw(this.startX, this.startY, this.radius);\n    }\n  }\n\n  draw(x, y, radius) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = async function() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.beginPath()\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.stroke();\n    }.bind(this)\n  }\n\n  static staticCircleDraw(ctx, x, y, radius, color) {\n    ctx.fillStyle = color\n    ctx.beginPath()\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  }\n};\n","import Brush from \"./Brush\";\n\nexport default class Eraser extends Brush {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  };\n\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseUpHandler(event) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'finish',\n      }\n    }))\n  }\n\n  mouseDownHandler(event) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(event.pageX - event.target.offsetLeft, event.pageY - event.target.offsetTop)\n  }\n\n  mouseMoveHandler(event) {\n    if(this.mouseDown) {\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'eraser',\n          x: event.pageX - event.target.offsetLeft,\n          y: event.pageY - event.target.offsetTop,\n        }\n      }))\n    }\n  }\n\n  static eraserDraw(ctx, x, y) {\n    ctx.strokeStyle = \"white\";\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  }\n};\n","import Tool from \"./Tool\";\n\nexport default class Line extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n    this.name = 'Line';\n  };\n\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseUpHandler(event) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'line',\n        x: this.startX,\n        y: this.startY,\n        color: this.ctx.fillStyle,\n      }\n    }))\n  }\n\n  mouseDownHandler(event) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.currentX, this.currentY);\n    this.saved = this.canvas.toDataURL();\n    this.currentX = event.pageX - event.target.offsetLeft;\n    this.currentY = event.pageY - event.target.offsetTop;\n  }\n\n  mouseMoveHandler(event) {\n    if(this.mouseDown) {\n      this.draw(event.pageX - event.target.offsetLeft, event.pageY - event.target.offsetTop);\n    }\n  }\n\n  draw(x, y) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = async function() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.currentX, this.currentY);\n      this.ctx.lineTo(x, y);\n      this.ctx.stroke();\n    }.bind(this)\n  }\n\n  static lineDraw(ctx, x, y, color) {\n    ctx.fillStyle = color\n    ctx.beginPath()\n    ctx.moveTo(x, y);\n    ctx.fill();\n    ctx.stroke();\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\n\nclass CanvasState {\n  canvas = null\n  socket = null\n  sessionid = null\n  undoList = []\n  redoList = []\n  username = \"\"\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  setSessionId(id) {\n    this.sessionid = id;\n  }\n\n  setSocket(socket) {\n    this.socket = socket;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n  }\n\n  setUsername(username) {\n    this.username = username;\n  }\n\n  pushToUndo(data) {\n    this.undoList.push(data);\n  }\n\n  pushToRedo(data) {\n    this.redoList.push(data);\n  }\n\n  undo() {\n    let ctx = this.canvas.getContext('2d');\n    if(this.undoList.length > 0) {\n      let dataUrl = this.undoList.pop();\n      this.redoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n      }\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n  }\n\n  redo() {\n    let ctx = this.canvas.getContext('2d');\n    if(this.redoList.length > 0) {\n      let dataUrl = this.redoList.pop();\n      this.undoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n      }\n    }\n  }\n}\n\nexport default new CanvasState();\n","import React from 'react';\nimport '../styles/toolbar.scss'\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport Circle from '../tools/Circle';\nimport Eraser from '../tools/Eraser';\nimport Line from '../tools/Line'\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\n\nconst Toolbar = () => {\n\n  const changeColor = event => {\n    toolState.setStrokeColor(event.target.value);\n    toolState.setFillColor(event.target.value);\n  }\n  \n  const download = () => {\n    const dataUrl = canvasState.canvas.toDataURL();\n    console.log(dataUrl);\n    const a = document.createElement('a');\n    a.href = dataUrl;\n    a.download = canvasState.sessionid + `.png`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  return (\n    <div className='toolbar'>\n      <button className='toolbar__btn brush' onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionid))}></button>\n      <button className='toolbar__btn rect' onClick={() => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionid))}></button>\n      <button className='toolbar__btn circle' onClick={() => toolState.setTool(new Circle(canvasState.canvas, canvasState.socket, canvasState.sessionid))}></button>\n      <button className='toolbar__btn eraser' onClick={() => toolState.setTool(new Eraser(canvasState.canvas, canvasState.socket, canvasState.sessionid))}></button>\n      <button className='toolbar__btn line' onClick={() => toolState.setTool(new Line(canvasState.canvas, canvasState.socket, canvasState.sessionid))}></button>\n      <input onChange={event => changeColor(event)} style={{marginLeft: 10}} type=\"color\"/>\n      <button className='toolbar__btn undo' onClick={() => canvasState.undo()} />\n      <button className='toolbar__btn redo' onClick={() => canvasState.redo()} />\n      <button className='toolbar__btn save' onClick={() => download()}></button>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from 'mobx-react-lite';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport { Modal, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport Rect from '../tools/Rect';\nimport axios from 'axios';\nimport Circle from '../tools/Circle';\nimport Eraser from '../tools/Eraser';\nimport Line from '../tools/Line';\n\nconst Canvas =  observer(() => {\n  const canvasRef = useRef();\n  const usernameRef = useRef();\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n  \n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    let ctx = canvasRef.current.getContext('2d');\n    axios.get(`https://semyon-paint.herokuapp.com/image?id=${params.id}`)\n      .then(response => {\n        const img = new Image()\n        img.src = response.data\n        img.onload = () => {\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\n          ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height)\n        }\n      })\n  }, [])\n\n  useEffect(() => {\n    if(canvasState.username) {\n      const socket = new WebSocket(`ws://semyon-paint.herokuapp.com/`);\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id))\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: \"connection\",\n        }))\n      }\n      socket.onmessage = (event) => {\n        let msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case 'connection':\n            console.log(`user ${msg.username} connected!!!!`)\n            break\n          case 'draw': \n            drawHandler(msg)\n            break\n        }\n      }\n    }\n  }, [canvasState.username])\n\n  const drawHandler = (msg) => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current.getContext('2d')\n    switch (figure.type) {\n      case 'brush':\n        Brush.draw(ctx, figure.x, figure.y)\n        break\n      case 'rect':\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color)\n        break\n      case 'circle':\n        Circle.staticCircleDraw(ctx, figure.x, figure.y, figure.radius, figure.color)\n        break\n      case 'eraser':\n        Eraser.eraserDraw(ctx, figure.x, figure.y)\n        break\n      case 'line':\n        Line.lineDraw(ctx, figure.x, figure.y, figure.color)\n        break\n      case 'finish':\n        ctx.beginPath()\n        break\n    }\n  }\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n    axios.post(`https://semyon-paint.herokuapp.com/image?id=${params.id}`, {img: canvasRef.current.toDataURL()})\n      .then(response => console.log(response.data))\n  }\n\n  const connectionHandler = () => {\n    canvasState.setUsername(usernameRef.current.value);\n    setModal(false);\n  }\n\n  return (\n    <div className='canvas'>\n      <Modal show={modal} onHide={() => {}}>\n        <Modal.Header>\n          <Modal.Title>Введите ваше имя</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input type=\"text\" ref={usernameRef}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => connectionHandler()}>\n            Войти\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400}/>\n    </div>\n  );\n});\n\nexport default Canvas;\n","import React from \"react\";\nimport SettingBar from \"./components/SettingBar\";\nimport Toolbar from \"./components/Toolbar\";\nimport Canvas from \"./components/Canvas\";\nimport './styles/app.scss';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path='/:id'>\n            <Toolbar />\n            <SettingBar />\n            <Canvas/>\n          </Route>\n          <Redirect to={`f${(+new Date).toString(16)}`} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}